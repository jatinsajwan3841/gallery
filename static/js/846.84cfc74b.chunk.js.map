{"version":3,"file":"static/js/846.84cfc74b.chunk.js","mappings":"kXAkGA,EAzFoB,SAAHA,GAAiB,IAAXC,EAAGD,EAAHC,IACnBC,EAA8BC,EAAAA,SAAe,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,EAAAA,EAAAA,IAAU,iCAAiC,KAAD,EAAzDN,EAAMG,EAAAI,MACNN,EAAO,IACRO,KAAKR,EAAOC,KAAKQ,MAAM,EAAG,KAC/BR,EAAKO,KAAKR,EAAOC,KAAKQ,MAAM,GAAI,KAChCR,EAAKO,KAAKR,EAAOC,KAAKQ,MAAM,GAAI,KAChChB,EAAWQ,GAAM,wBAAAE,EAAAO,OAAA,GAAAX,EAAA,KACpB,kBAPc,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KAef,OAPAvB,EAAAA,WAAgB,YACA,UAARF,GAEe,UAARA,IADPO,GAIR,GAAG,KAECmB,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,CAAEC,SAAU,EAAGC,GAAI,QAAUC,WAAS,EAACC,QAAS,EAAEC,UACxDP,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACO,MAAI,EAACC,GAAI,GAAGF,UACdP,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACI,WAAS,EAACK,eAAe,OAAOJ,QAAS,GAAGC,SAC7C5B,EAAQgC,OAAS,EACdhC,EAAQiC,KAAI,SAACC,EAAOC,GAAG,OACnBd,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAWO,MAAI,EAAAD,UAChBP,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CACFb,GAAI,CACAc,OAAQ,IACRC,MAAO,KACTV,UAEFW,EAAAA,EAAAA,MAACjB,EAAAA,GAAI,CACDI,WAAS,EACTc,UAAU,MACVC,UAAU,iBAAgBb,SAAA,CAEzBM,GACGA,EAAMD,KAAI,SAACS,EAAKP,GACZ,OACIA,EAAM,IACFI,EAAAA,EAAAA,MAAA,OACIE,UAAU,iBAAgBb,SAAA,EAG1BP,EAAAA,EAAAA,KAAA,OACIsB,IACID,EAAIE,aAERN,MAAM,MACND,OAAO,MACPQ,QAAQ,SAEXX,EAAMF,OAAS,GACZG,EAAM,IACFI,EAAAA,EAAAA,MAAA,QAAME,UAAU,iBAAgBb,SAAA,CAAC,IAE5BM,EAAMF,OACH,OAfXG,EAqBrB,KACJd,EAAAA,EAAAA,KAACyB,EAAAA,EAAK,CACFN,UAAU,MACVC,UAAU,kBAAiBb,UAE3BP,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAAAR,UACFW,EAAAA,EAAAA,MAACQ,EAAAA,EAAQ,CAAAnB,SAAA,EACLP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAApB,SAAC,UACVP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAApB,SAAC,YACVP,EAAAA,EAAAA,KAAC2B,EAAAA,EAAQ,CAAApB,SAAC,yBAhDvBO,EAsDJ,KAGXI,EAAAA,EAAAA,MAAA,OAAKE,UAAU,QAAOb,SAAA,CAAC,MAAIjC,EAAI,iBAMvD,E,+BCnFA,SAASsD,EAASC,GACd,IAAQtB,EAAqCsB,EAArCtB,SAAUM,EAA2BgB,EAA3BhB,MAAOiB,EAAoBD,EAApBC,MAAUC,GAAKC,EAAAA,EAAAA,GAAKH,EAAKI,GAElD,OACIjC,EAAAA,EAAAA,KAAA,OAAAkC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACIC,KAAK,WACLC,OAAQvB,IAAUiB,EAClBO,GAAE,uBAAAC,OAAyBR,GAC3B,oCAAAQ,OAAmCR,IAC/BC,GAAK,IAAAxB,SAERM,IAAUiB,IACP9B,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,CAACrC,GAAI,CAAEsC,EAAG,GAAIjC,UACdP,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAAAlC,SAAEA,QAKjC,CAQA,SAASmC,EAAUZ,GACf,MAAO,CACHO,GAAG,kBAADC,OAAoBR,GACtB,gBAAgB,uBAADQ,OAAyBR,GAEhD,CAEA,IAuDA,EAvDa,WACT,IAAMa,GAAQC,EAAAA,EAAAA,KACdrE,EAA0BC,EAAAA,SAAe,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCsC,EAAKpC,EAAA,GAAEoE,EAAQpE,EAAA,GAUtB,OACIyC,EAAAA,EAAAA,MAACqB,EAAAA,EAAG,CAACrC,GAAI,CAAE4C,QAAS,oBAAqBvC,SAAA,EACrCP,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,CAACC,SAAS,SAAQzC,UACrBW,EAAAA,EAAAA,MAAC+B,EAAAA,EAAI,CACDpC,MAAOA,EACPqC,SAbK,SAACC,EAAOC,GACzBP,EAASO,EACb,EAYgBC,eAAe,YACfC,UAAU,UACVC,QAAQ,YACR,aAAW,0BAAyBhD,SAAA,EAEpCP,EAAAA,EAAAA,KAACwD,EAAAA,GAAGtB,EAAAA,EAAAA,GAAA,CAACuB,MAAM,iBAAoBf,EAAU,MACzC1C,EAAAA,EAAAA,KAACwD,EAAAA,GAAGtB,EAAAA,EAAAA,GAAA,CAACuB,MAAM,iBAAoBf,EAAU,MACzC1C,EAAAA,EAAAA,KAACwD,EAAAA,GAAGtB,EAAAA,EAAAA,GAAA,CAACuB,MAAM,gBAAmBf,EAAU,WAGhDxB,EAAAA,EAAAA,MAACwC,EAAAA,GAAc,CACXC,KAA0B,QAApBhB,EAAMxB,UAAsB,YAAc,IAChDW,MAAOjB,EACP+C,cAvBc,SAAC9B,GACvBe,EAASf,EACb,EAqB6CvB,SAAA,EAEjCP,EAAAA,EAAAA,KAAC4B,EAAQ,CAACf,MAAOA,EAAOiB,MAAO,EAAG+B,IAAKlB,EAAMxB,UAAUZ,UACnDP,EAAAA,EAAAA,KAAC8D,EAAW,CAACxF,IAAI,aAErB0B,EAAAA,EAAAA,KAAC4B,EAAQ,CAACf,MAAOA,EAAOiB,MAAO,EAAG+B,IAAKlB,EAAMxB,UAAUZ,UACnDP,EAAAA,EAAAA,KAAC8D,EAAW,CAACxF,IAAI,aAErB0B,EAAAA,EAAAA,KAAC4B,EAAQ,CAACf,MAAOA,EAAOiB,MAAO,EAAG+B,IAAKlB,EAAMxB,UAAUZ,SAAC,oBAK3DM,EAAQ,IACLb,EAAAA,EAAAA,KAAA,OAAKoB,UAAU,YAAWb,UACtBP,EAAAA,EAAAA,KAAC+D,EAAAA,EAAG,CAACC,MAAM,UAAU,aAAW,MAAKzD,UACjCP,EAAAA,EAAAA,KAACiE,EAAAA,EAAO,UAMhC,C","sources":["components/galleryView/index.js","components/home/index.js"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst GalleryView = ({ tab }) => {\n    const [gallery, setGallery] = React.useState([]);\n\n    const getImages = async () => {\n        const images = await axios.get(\"https://picsum.photos/v2/list\");\n        const data = [];\n        data.push(images.data.slice(0, 10));\n        data.push(images.data.slice(10, 20));\n        data.push(images.data.slice(20, 30));\n        setGallery(data);\n    };\n    React.useEffect(() => {\n        if (tab === \"Image\") {\n            getImages();\n        } else if (tab === \"Video\") {\n            getImages();\n        }\n    }, []);\n    return (\n        <Grid sx={{ flexGrow: 1, mt: \"40px\" }} container spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justifyContent=\"left\" spacing={12}>\n                    {gallery.length > 0 ? (\n                        gallery.map((value, ind) => (\n                            <Grid key={ind} item>\n                                <Paper\n                                    sx={{\n                                        height: 300,\n                                        width: 300,\n                                    }}\n                                >\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        className=\"gallery-holder\"\n                                    >\n                                        {value &&\n                                            value.map((val, ind) => {\n                                                return (\n                                                    ind < 4 && (\n                                                        <div\n                                                            className=\"gallery-images\"\n                                                            key={ind}\n                                                        >\n                                                            <img\n                                                                src={\n                                                                    val.download_url\n                                                                }\n                                                                width=\"149\"\n                                                                height=\"149\"\n                                                                loading=\"lazy\"\n                                                            />\n                                                            {value.length > 4 &&\n                                                                ind > 2 && (\n                                                                    <span className=\"gallery-number\">\n                                                                        +\n                                                                        {value.length -\n                                                                            4}\n                                                                    </span>\n                                                                )}\n                                                        </div>\n                                                    )\n                                                );\n                                            })}\n                                        <Stack\n                                            direction=\"row\"\n                                            className=\"gallery-options\"\n                                        >\n                                            <Paper>\n                                                <MenuList>\n                                                    <MenuItem>Edit</MenuItem>\n                                                    <MenuItem>Delete</MenuItem>\n                                                    <MenuItem>Details</MenuItem>\n                                                </MenuList>\n                                            </Paper>\n                                        </Stack>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                        ))\n                    ) : (\n                        <div className=\"empty\">No {tab} found</div>\n                    )}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default GalleryView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { useTheme } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport GalleryView from \"../galleryView\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        \"aria-controls\": `full-width-tabpanel-${index}`,\n    };\n}\n\nconst Home = () => {\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <Box sx={{ bgcolor: \"background.paper\" }}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Photo Gallery\" {...a11yProps(0)} />\n                    <Tab label=\"Video Gallery\" {...a11yProps(1)} />\n                    <Tab label=\"User Profile\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel value={value} index={0} dir={theme.direction}>\n                    <GalleryView tab=\"Image\" />\n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                    <GalleryView tab=\"Video\" />\n                </TabPanel>\n                <TabPanel value={value} index={2} dir={theme.direction}>\n                    User Profile\n                </TabPanel>\n            </SwipeableViews>\n\n            {value < 2 && (\n                <div className=\"fixed-add\">\n                    <Fab color=\"primary\" aria-label=\"add\">\n                        <AddIcon />\n                    </Fab>\n                </div>\n            )}\n        </Box>\n    );\n};\n\nexport default Home;\n"],"names":["_ref","tab","_React$useState","React","_React$useState2","_slicedToArray","gallery","setGallery","getImages","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","images","data","wrap","_context","prev","next","axios","sent","push","slice","stop","apply","arguments","_jsx","Grid","sx","flexGrow","mt","container","spacing","children","item","xs","justifyContent","length","map","value","ind","Paper","height","width","_jsxs","direction","className","val","src","download_url","loading","Stack","MenuList","MenuItem","TabPanel","props","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","id","concat","Box","p","Typography","a11yProps","theme","useTheme","setValue","bgcolor","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","Tab","label","SwipeableViews","axis","onChangeIndex","dir","GalleryView","Fab","color","AddIcon"],"sourceRoot":""}