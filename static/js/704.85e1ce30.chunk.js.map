{"version":3,"file":"static/js/704.85e1ce30.chunk.js","mappings":"kXAyEA,EAjEuB,SAAHA,GAKb,IAJHC,EAAGD,EAAHC,IACAC,EAAeF,EAAfE,gBACAC,EAAkBH,EAAlBG,mBACAC,EAAoBJ,EAApBI,qBAEA,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACHC,KAAMN,EACNO,QAASN,EACTO,OAAO,QACP,kBAAgB,sBAChB,mBAAiB,4BACjBC,WAAW,EACXC,SAAS,KAAIP,SAAA,EAEbD,EAAAA,EAAAA,KAACS,EAAAA,EAAW,CAACC,GAAG,sBAAqBT,SAAC,qBAGtCD,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAACC,UAAU,EAAKX,UAC1BD,EAAAA,EAAAA,KAACa,EAAAA,EAAiB,CACdH,GAAG,4BACHI,UAAW,EAAEb,SAEZJ,GACGA,EAAgBkB,KAAI,SAACC,EAAKC,GAAG,OACzBjB,EAAAA,EAAAA,KAAA,OAAAC,SACa,UAARL,GACGI,EAAAA,EAAAA,KAAA,OACIkB,IAAKF,EAAIE,IAAIC,OACbC,MAAM,MACNC,OAAO,MACPC,QAAQ,OACRC,MAAO,CACHC,UAAW,YAInBxB,EAAAA,EAAAA,KAAA,SACIoB,MAAM,MACNC,OAAO,MACPI,UAAQ,EACRF,MAAO,CACHC,UAAW,SACbvB,UAEFD,EAAAA,EAAAA,KAAA,UACIkB,IAAKF,EAAIU,YAAY,GAAGC,KACxBC,KAAK,iBAtBXX,EA0BJ,SAItBjB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAa,CAAA5B,UACVD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,QAAShC,EAAqBE,SAAC,gBAK3D,E,4DC6GA,EA1KoB,SAAHN,GAAiB,IAAXC,EAAGD,EAAHC,IACnBoC,EAAoDC,EAAAA,UAAe,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlElC,EAAkBoC,EAAA,GAAEE,EAAqBF,EAAA,GAChDG,EAA8CJ,EAAAA,SAAe,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzDxC,EAAeyC,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,EAA8BP,EAAAA,SAAe,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAzCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpB1C,EAAuB,SAAC6C,EAAG3B,GAC7BmB,GAAsB,SAACS,GAAI,OAAMA,CAAI,SACzBC,IAAR7B,GACAsB,EAAmBG,EAAQzB,GAEnC,EAEM8B,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAZ,KAAAY,EAAAC,MAAA,OAMb,OALKL,EAAS,CACXM,QAAS,CACL,eAAgB,mBAChBC,cAAeC,6DAEtBJ,EAAAC,KAAA,EACoBI,EAAAA,EAAAA,IACjB,gDACAT,GACF,KAAD,EAHKC,EAAMG,EAAAM,KAIZC,QAAQC,IAAIX,IACNC,EAAO,IACRW,KAAKZ,EAAOC,KAAKY,OAAOC,MAAM,EAAG,KACtCb,EAAKW,KAAKZ,EAAOC,KAAKY,OAAOC,MAAM,GAAI,KACvCb,EAAKW,KAAKZ,EAAOC,KAAKY,OAAOC,MAAM,GAAI,KACvCzB,EAAWY,GAAM,yBAAAE,EAAAY,OAAA,GAAAjB,EAAA,KACpB,kBAjBc,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KAmBTC,EAAS,eAAAC,GAAAxB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuB,IAAA,IAAArB,EAAAsB,EAAApB,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAoB,GAAA,cAAAA,EAAA/B,KAAA+B,EAAAlB,MAAA,OAMb,OALKL,EAAS,CACXM,QAAS,CACL,eAAgB,mBAChBC,cAAeC,6DAEtBe,EAAAlB,KAAA,EACoBI,EAAAA,EAAAA,IACjB,oDACAT,GACF,KAAD,EAHKsB,EAAMC,EAAAb,KAIZC,QAAQC,IAAIU,IACNpB,EAAO,IACRW,KAAKS,EAAOpB,KAAKoB,OAAOP,MAAM,EAAG,KACtCb,EAAKW,KAAKS,EAAOpB,KAAKoB,OAAOP,MAAM,GAAI,KACvCb,EAAKW,KAAKS,EAAOpB,KAAKoB,OAAOP,MAAM,GAAI,KACvCzB,EAAWY,GAAM,yBAAAqB,EAAAP,OAAA,GAAAK,EAAA,KACpB,kBAjBc,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAyBf,OAPAtC,EAAAA,WAAgB,WACA,UAARrC,EACAmD,IACe,UAARnD,GACP4E,GAER,GAAG,KAECtE,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,GAAI,CAAEC,SAAU,EAAGC,GAAI,QAAUC,WAAS,EAACC,QAAS,EAAEjF,SAAA,EACxDD,EAAAA,EAAAA,KAAC6E,EAAAA,GAAI,CAACM,MAAI,EAACC,GAAI,GAAGnF,UACdD,EAAAA,EAAAA,KAAC6E,EAAAA,GAAI,CAACI,WAAS,EAACI,eAAe,OAAOH,QAAS,GAAGjF,SAC7CyC,EAAQ4C,OAAS,EACd5C,EAAQ3B,KAAI,SAACwE,EAAOtE,GAAG,OACnBjB,EAAAA,EAAAA,KAAC6E,EAAAA,GAAI,CAAWM,MAAI,EAAAlF,UAChBD,EAAAA,EAAAA,KAACwF,EAAAA,EAAK,CACFV,GAAI,CACAzD,OAAQ,IACRD,MAAO,KACTnB,UAEFC,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACDI,WAAS,EACTQ,UAAU,MACVC,UAAU,iBAAgBzF,SAAA,CAEzBsF,GACGA,EAAMxE,KAAI,SAACC,EAAKC,GACZ,OACIA,EAAM,IACFf,EAAAA,EAAAA,MAAA,OACIwF,UAAU,iBAAgBzF,SAAA,CAGjB,UAARL,GACGI,EAAAA,EAAAA,KAAA,OACIkB,IACIF,EAAIE,IACCC,OAETC,MAAM,MACNC,OAAO,MACPC,QAAQ,OACRC,MAAO,CACHC,UACI,YAIZxB,EAAAA,EAAAA,KAAA,SACIoB,MAAM,MACNC,OAAO,MACPI,UAAQ,EACRF,MAAO,CACHC,UACI,SACNvB,UAEFD,EAAAA,EAAAA,KAAA,UACIkB,IACIF,EACKU,YAAY,GACZC,KAETC,KAAK,gBAIhB2D,EAAMD,OAAS,GACZrE,EAAM,IACFf,EAAAA,EAAAA,MAAA,QAAMwF,UAAU,iBAAgBzF,SAAA,CAAC,IAE5BsF,EAAMD,OACH,OAzCXrE,EA+CrB,KACJjB,EAAAA,EAAAA,KAAC2F,EAAAA,EAAK,CACFF,UAAU,MACVC,UAAU,kBAAiBzF,UAE3BD,EAAAA,EAAAA,KAACwF,EAAAA,EAAK,CAAAvF,UACFC,EAAAA,EAAAA,MAAC0F,EAAAA,EAAQ,CAAA3F,SAAA,EACLD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAQ,CAAA5F,SAAC,UACVD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAQ,CAAA5F,SAAC,YACVD,EAAAA,EAAAA,KAAC6F,EAAAA,EAAQ,CACL9D,QAAS,SAACa,GAAC,OACP7C,EACI6C,EACA3B,EACH,EACJhB,SACJ,yBAjFdgB,EAyFJ,KAGXjB,EAAAA,EAAAA,KAAC6E,EAAAA,GAAI,CAACM,MAAI,EAAAlF,UACNC,EAAAA,EAAAA,MAAA,QAAMwF,UAAU,QAAOzF,SAAA,CAAC,MAAIL,EAAI,mBAKhDI,EAAAA,EAAAA,KAAC8F,EAAc,CACXlG,IAAKA,EACLC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,qBAAsBA,MAItC,E,yCCpKA,SAASgG,EAASC,GACd,IAAQ/F,EAAqC+F,EAArC/F,SAAUsF,EAA2BS,EAA3BT,MAAOU,EAAoBD,EAApBC,MAAUC,GAAKC,EAAAA,EAAAA,GAAKH,EAAKI,GAElD,OACIpG,EAAAA,EAAAA,KAAA,OAAAqG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACIC,KAAK,WACLC,OAAQhB,IAAUU,EAClBvF,GAAE,uBAAA8F,OAAyBP,GAC3B,oCAAAO,OAAmCP,IAC/BC,GAAK,IAAAjG,SAERsF,IAAUU,IACPjG,EAAAA,EAAAA,KAACyG,EAAAA,EAAG,CAAC3B,GAAI,CAAE4B,EAAG,GAAIzG,UACdD,EAAAA,EAAAA,KAAC2G,EAAAA,EAAU,CAAA1G,SAAEA,QAKjC,CAQA,SAAS2G,EAAUX,GACf,MAAO,CACHvF,GAAG,kBAAD8F,OAAoBP,GACtB,gBAAgB,uBAADO,OAAyBP,GAEhD,CAEA,IA+DA,EA/Da,WACT,IAAMY,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KACdhF,EAA0BC,EAAAA,SAAe,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCuD,EAAKrD,EAAA,GAAE+E,EAAQ/E,EAAA,GAiBtB,OAPAD,EAAAA,WAAgB,WACEiF,aAAaC,QAAQ,UAE/BN,EAAS,SAEjB,GAAG,KAGC3G,EAAAA,EAAAA,MAACuG,EAAAA,EAAG,CAAC3B,GAAI,CAAEsC,QAAS,oBAAqBnH,SAAA,EACrCD,EAAAA,EAAAA,KAACqH,EAAAA,EAAM,CAACC,SAAS,SAAQrH,UACrBC,EAAAA,EAAAA,MAACqH,EAAAA,EAAI,CACDhC,MAAOA,EACPiC,SApBK,SAACC,EAAOC,GACzBT,EAASS,EACb,EAmBgBC,eAAe,YACfC,UAAU,UACVC,QAAQ,YACR,aAAW,0BAAyB5H,SAAA,EAEpCD,EAAAA,EAAAA,KAAC8H,EAAAA,GAAGzB,EAAAA,EAAAA,GAAA,CAAC0B,MAAM,iBAAoBnB,EAAU,MACzC5G,EAAAA,EAAAA,KAAC8H,EAAAA,GAAGzB,EAAAA,EAAAA,GAAA,CAAC0B,MAAM,iBAAoBnB,EAAU,MACzC5G,EAAAA,EAAAA,KAAC8H,EAAAA,GAAGzB,EAAAA,EAAAA,GAAA,CAAC0B,MAAM,gBAAmBnB,EAAU,WAGhD1G,EAAAA,EAAAA,MAAC8H,EAAAA,GAAc,CACXC,KAA0B,QAApBlB,EAAMtB,UAAsB,YAAc,IAChDQ,MAAOV,EACP2C,cA9Bc,SAACjC,GACvBgB,EAAShB,EACb,EA4B6ChG,SAAA,EAEjCD,EAAAA,EAAAA,KAAC+F,EAAQ,CAACR,MAAOA,EAAOU,MAAO,EAAGkC,IAAKpB,EAAMtB,UAAUxF,UACnDD,EAAAA,EAAAA,KAACoI,EAAW,CAACxI,IAAI,aAErBI,EAAAA,EAAAA,KAAC+F,EAAQ,CAACR,MAAOA,EAAOU,MAAO,EAAGkC,IAAKpB,EAAMtB,UAAUxF,UACnDD,EAAAA,EAAAA,KAACoI,EAAW,CAACxI,IAAI,aAErBI,EAAAA,EAAAA,KAAC+F,EAAQ,CAACR,MAAOA,EAAOU,MAAO,EAAGkC,IAAKpB,EAAMtB,UAAUxF,SAAC,oBAK3DsF,EAAQ,IACLvF,EAAAA,EAAAA,KAAA,OAAK0F,UAAU,YAAWzF,UACtBD,EAAAA,EAAAA,KAACqI,EAAAA,EAAG,CAACC,MAAM,UAAU,aAAW,MAAKrI,UACjCD,EAAAA,EAAAA,KAACuI,EAAAA,EAAO,UAMhC,C","sources":["components/galleryDetails/index.js","components/galleryView/index.js","components/home/index.js"],"sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nconst GalleryDetails = ({\n    tab,\n    selectedGallery,\n    showGalleryDetails,\n    handleGalleryDetails,\n}) => {\n    return (\n        <div>\n            <Dialog\n                open={showGalleryDetails}\n                onClose={handleGalleryDetails}\n                scroll=\"paper\"\n                aria-labelledby=\"scroll-dialog-title\"\n                aria-describedby=\"scroll-dialog-description\"\n                fullWidth={true}\n                maxWidth=\"sm\"\n            >\n                <DialogTitle id=\"scroll-dialog-title\">\n                    Gallery Details\n                </DialogTitle>\n                <DialogContent dividers={true}>\n                    <DialogContentText\n                        id=\"scroll-dialog-description\"\n                        tabIndex={-1}\n                    >\n                        {selectedGallery &&\n                            selectedGallery.map((val, ind) => (\n                                <div key={ind}>\n                                    {tab === \"Image\" ? (\n                                        <img\n                                            src={val.src.medium}\n                                            width=\"149\"\n                                            height=\"149\"\n                                            loading=\"lazy\"\n                                            style={{\n                                                objectFit: \"cover\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <video\n                                            width=\"149\"\n                                            height=\"149\"\n                                            controls\n                                            style={{\n                                                objectFit: \"cover\",\n                                            }}\n                                        >\n                                            <source\n                                                src={val.video_files[1].link}\n                                                type=\"video/mp4\"\n                                            />\n                                        </video>\n                                    )}\n                                </div>\n                            ))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleGalleryDetails}>Close</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default GalleryDetails;\n","import React from \"react\";\nimport GalleryDetails from \"../galleryDetails\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport Stack from \"@mui/material/Stack\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst GalleryView = ({ tab }) => {\n    const [showGalleryDetails, setShowGalleryDetails] = React.useState(false);\n    const [selectedGallery, setSelectedGallery] = React.useState([]);\n    const [gallery, setGallery] = React.useState([]);\n\n    const handleGalleryDetails = (e, ind) => {\n        setShowGalleryDetails((prev) => !prev);\n        if (ind !== undefined) {\n            setSelectedGallery(gallery[ind]);\n        }\n    };\n\n    const getImages = async () => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: process.env.REACT_APP_APIKey,\n            },\n        };\n        const images = await axios.get(\n            \"https://api.pexels.com/v1/curated?per_page=30\",\n            config\n        );\n        console.log(images);\n        const data = [];\n        data.push(images.data.photos.slice(0, 10));\n        data.push(images.data.photos.slice(10, 20));\n        data.push(images.data.photos.slice(20, 30));\n        setGallery(data);\n    };\n\n    const getVidoes = async () => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: process.env.REACT_APP_APIKey,\n            },\n        };\n        const videos = await axios.get(\n            \"https://api.pexels.com/videos/popular?per_page=30\",\n            config\n        );\n        console.log(videos);\n        const data = [];\n        data.push(videos.data.videos.slice(0, 10));\n        data.push(videos.data.videos.slice(10, 20));\n        data.push(videos.data.videos.slice(20, 30));\n        setGallery(data);\n    };\n    React.useEffect(() => {\n        if (tab === \"Image\") {\n            getImages();\n        } else if (tab === \"Video\") {\n            getVidoes();\n        }\n    }, []);\n    return (\n        <Grid sx={{ flexGrow: 1, mt: \"40px\" }} container spacing={2}>\n            <Grid item xs={12}>\n                <Grid container justifyContent=\"left\" spacing={12}>\n                    {gallery.length > 0 ? (\n                        gallery.map((value, ind) => (\n                            <Grid key={ind} item>\n                                <Paper\n                                    sx={{\n                                        height: 300,\n                                        width: 300,\n                                    }}\n                                >\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        className=\"gallery-holder\"\n                                    >\n                                        {value &&\n                                            value.map((val, ind) => {\n                                                return (\n                                                    ind < 4 && (\n                                                        <div\n                                                            className=\"gallery-images\"\n                                                            key={ind}\n                                                        >\n                                                            {tab === \"Image\" ? (\n                                                                <img\n                                                                    src={\n                                                                        val.src\n                                                                            .medium\n                                                                    }\n                                                                    width=\"149\"\n                                                                    height=\"149\"\n                                                                    loading=\"lazy\"\n                                                                    style={{\n                                                                        objectFit:\n                                                                            \"cover\",\n                                                                    }}\n                                                                />\n                                                            ) : (\n                                                                <video\n                                                                    width=\"149\"\n                                                                    height=\"149\"\n                                                                    controls\n                                                                    style={{\n                                                                        objectFit:\n                                                                            \"cover\",\n                                                                    }}\n                                                                >\n                                                                    <source\n                                                                        src={\n                                                                            val\n                                                                                .video_files[1]\n                                                                                .link\n                                                                        }\n                                                                        type=\"video/mp4\"\n                                                                    />\n                                                                </video>\n                                                            )}\n                                                            {value.length > 4 &&\n                                                                ind > 2 && (\n                                                                    <span className=\"gallery-number\">\n                                                                        +\n                                                                        {value.length -\n                                                                            4}\n                                                                    </span>\n                                                                )}\n                                                        </div>\n                                                    )\n                                                );\n                                            })}\n                                        <Stack\n                                            direction=\"row\"\n                                            className=\"gallery-options\"\n                                        >\n                                            <Paper>\n                                                <MenuList>\n                                                    <MenuItem>Edit</MenuItem>\n                                                    <MenuItem>Delete</MenuItem>\n                                                    <MenuItem\n                                                        onClick={(e) =>\n                                                            handleGalleryDetails(\n                                                                e,\n                                                                ind\n                                                            )\n                                                        }\n                                                    >\n                                                        Details\n                                                    </MenuItem>\n                                                </MenuList>\n                                            </Paper>\n                                        </Stack>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                        ))\n                    ) : (\n                        <Grid item>\n                            <span className=\"empty\">No {tab} found</span>\n                        </Grid>\n                    )}\n                </Grid>\n            </Grid>\n            <GalleryDetails\n                tab={tab}\n                selectedGallery={selectedGallery}\n                showGalleryDetails={showGalleryDetails}\n                handleGalleryDetails={handleGalleryDetails}\n            />\n        </Grid>\n    );\n};\n\nexport default GalleryView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { useTheme } from \"@mui/material/styles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Fab from \"@mui/material/Fab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport GalleryView from \"../galleryView\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        \"aria-controls\": `full-width-tabpanel-${index}`,\n    };\n}\n\nconst Home = () => {\n    const navigate = useNavigate();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    React.useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            navigate(\"/login\");\n        }\n    }, []);\n\n    return (\n        <Box sx={{ bgcolor: \"background.paper\" }}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Photo Gallery\" {...a11yProps(0)} />\n                    <Tab label=\"Video Gallery\" {...a11yProps(1)} />\n                    <Tab label=\"User Profile\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel value={value} index={0} dir={theme.direction}>\n                    <GalleryView tab=\"Image\" />\n                </TabPanel>\n                <TabPanel value={value} index={1} dir={theme.direction}>\n                    <GalleryView tab=\"Video\" />\n                </TabPanel>\n                <TabPanel value={value} index={2} dir={theme.direction}>\n                    User Profile\n                </TabPanel>\n            </SwipeableViews>\n\n            {value < 2 && (\n                <div className=\"fixed-add\">\n                    <Fab color=\"primary\" aria-label=\"add\">\n                        <AddIcon />\n                    </Fab>\n                </div>\n            )}\n        </Box>\n    );\n};\n\nexport default Home;\n"],"names":["_ref","tab","selectedGallery","showGalleryDetails","handleGalleryDetails","_jsx","children","_jsxs","Dialog","open","onClose","scroll","fullWidth","maxWidth","DialogTitle","id","DialogContent","dividers","DialogContentText","tabIndex","map","val","ind","src","medium","width","height","loading","style","objectFit","controls","video_files","link","type","DialogActions","Button","onClick","_React$useState","React","_React$useState2","_slicedToArray","setShowGalleryDetails","_React$useState3","_React$useState4","setSelectedGallery","_React$useState5","_React$useState6","gallery","setGallery","e","prev","undefined","getImages","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","images","data","wrap","_context","next","headers","Authorization","process","axios","sent","console","log","push","photos","slice","stop","apply","arguments","getVidoes","_ref3","_callee2","videos","_context2","Grid","sx","flexGrow","mt","container","spacing","item","xs","justifyContent","length","value","Paper","direction","className","Stack","MenuList","MenuItem","GalleryDetails","TabPanel","props","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","concat","Box","p","Typography","a11yProps","navigate","useNavigate","theme","useTheme","setValue","localStorage","getItem","bgcolor","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","Tab","label","SwipeableViews","axis","onChangeIndex","dir","GalleryView","Fab","color","AddIcon"],"sourceRoot":""}